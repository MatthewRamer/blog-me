<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</head>
<body>
    <div class="header">
    <div class="back-btn">
        <a href="/home">Home</a>
    </div>
        <div class="rm-title">
            <h1>BlogMe: A Personal Blogging Site</h1>
        </div>
    <div class="invis">
        <a href="/home">Home</a>
    </div>
</div>

<div class="room-container" style="max-width: 66%; margin: 15px auto;">
    <div class="search-bar">
        <input type="text" id="search-input" placeholder="Search messages" onkeyup="debounceSearch()" required>
    </div>
    <div id="search-results" class="search-results"></div>

    <div class="input-div">
        <form action="/sendMessage" method="POST">
            <input type="hidden" name="roomId" value="{{roomName}}">
            <textarea name="text" placeholder="Enter your message" required></textarea>
            <button type="submit">Send</button>
        </form>
    </div>

    {{#each messages}}
        <div class="message-cont" id="message-{{_id}}">
                <div class="user_date">
                    <strong>{{nickname}}</strong> {{timestamp}}
                    <div>
                         {{#if  (eq ../loggedInNickname nickname)}} <!-- Found out how to use a helper function for the eq, found in main basically just checks if the logged in username matches the posted comments name->
                         <!-bootstrap modal model, basically just followed the tutorial online VERY HELPFUL-->
                        <button class="btn btn-primary" data-toggle="modal" data-target="#editModal" data-id="{{_id}}" data-text="{{text}}">Edit</button>
                           <!--DELETE BUTTON SHOULD GO HERE-->
                        <button onclick="deleteMessage('{{_id}}', '{{roomId}}')" class="btn btn-danger">Delete</button>
                         {{/if }}
                    </div>
                </div>
                <div>
                    <em class="comment">{{text}}</em>
                
            </div>
        </div>
    {{/each}}
</div>

<!--https://getbootstrap.com/docs/4.1/components/modal/-->
<!--Model Start This is a popup that will appear when you click the edit button in a chatroom-->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editMessageForm" action="/updateMessage" method="POST">
                    <input type="hidden" id="msgId" name="msgId">
                    <input type="hidden" name="roomId" value="{{roomName}}">
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Message:</label>
                        <textarea class="form-control" id="message-text" name="text"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary" form="editMessageForm">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this message?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="watermark">University of California, Riverside</div>
<div class="current-user-container">
    <div class="current-user">Current User: {{loggedInNickname}}</div>
    <input type="checkbox" id="logout-checkbox" style="display: none;">
    <label for="logout-checkbox" class="logout-label" onclick="logout()"> Logout </label>
</div>

<script>
    function logout() {
        window.location.href = '/logout';
    }

    $('#editModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); // Button that triggered the modal
        var msgId = button.data('id'); // Extract info from data-* attributes
        var text = button.data('text');
        var modal = $(this);
        modal.find('#msgId').val(msgId);
        modal.find('#message-text').val(text);
    });

    var currentMsgId = null;
    var currentRoomId = null;

    $('#deleteConfirmationModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget); 
        currentMsgId = button.data('id'); 
        currentRoomId = button.data('room-id');
    });

    function confirmDelete() {
        if (currentMsgId && currentRoomId) {
            deleteMessage(currentMsgId, currentRoomId);
            $('#deleteConfirmationModal').modal('hide');
        }
    }

    function deleteMessage(msgId, roomId) {
        fetch(`/deleteMessage/${msgId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ roomId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const messageElement = document.getElementById(`message-${msgId}`);
                if (messageElement) {
                    messageElement.remove();
                }
            } else {
                console.error('Failed to delete the message: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error deleting message:', error);
        });
    }

    function escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    function searchMessages() {
        const keyword = document.getElementById('search-input').value;
        const roomName = '{{roomName}}'; 

        if (!keyword.trim()) {
            document.getElementById('search-results').innerHTML = '';
            console.log("Keyword is empty, clearing results.");
            return;
        }

        console.log("Keyword sent:", keyword);
        fetch(`/searchMessages/${roomName}?keyword=${encodeURIComponent(keyword)}`, {
            headers: {
                'Cache-Control': 'no-cache' 
            }
        })
        .then(response => response.json())
        .then(messages => {
            console.log("Received messages:", messages); 
            const resultsContainer = document.getElementById('search-results');
            resultsContainer.innerHTML = ''; 

            if (messages.length > 0) {
                messages.forEach(msg => {
                    const highlightedText = msg.text.replace(new RegExp(escapeRegExp(keyword), 'gi'), match => `<mark>${match}</mark>`);
                    const messageElement = document.createElement('div');
                    messageElement.innerHTML = `
                        <div class="search-message">
                            <strong>${msg.nickname}</strong> <span>${msg.timestamp}</span>
                            <p>${highlightedText}</p>
                        </div>
                    `;
                    resultsContainer.appendChild(messageElement);
                });
            } else {
                resultsContainer.innerHTML = '<p>No results found.</p>'; 
            }
        })
        .catch(error => {
            console.error('Error searching messages:', error); 
        });
    }

    let searchTimeout;
    function debounceSearch() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(searchMessages, 300);
    }  

</script>
   
</body>
</html>

